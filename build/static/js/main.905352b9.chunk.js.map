{"version":3,"sources":["Components/Chart.js","Components/FileInput.js","App.js","index.js"],"names":["Chart","props","freqData","dbData","yMax","yMin","redraw","data","labels","datasets","borderColor","pointBackgroundColor","pointBorderColor","fill","options","legend","dragData","dragX","dragDataRound","scales","xAxes","ticks","fontColor","yAxes","max","min","gridLines","zeroLineColor","color","className","onClick","str","i","length","textFile","date","Date","now","Intl","DateTimeFormat","hour","minute","second","month","day","formatToParts","value","dayPeriod","link","document","getElementById","href","text","Blob","type","endings","window","URL","revokeObjectURL","createObjectURL","makeTextFile","download","classList","remove","formatData","id","FileInput","useState","setFreqData","setDbData","setYMax","setYMin","onChange","e","event","file","target","files","reader","FileReader","onload","dataArr","result","split","freqArr","dbArr","forEach","item","arr","push","parseFloat","trim","readAsText","handleFile","onInput","parseInt","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.905352b9.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"chartjs-plugin-dragdata\";\r\n\r\nconst Chart = (props) => {\r\n  const { freqData, dbData, yMax, yMin } = props;\r\n\r\n  const formatData = () => {\r\n    let str = \"\";\r\n\r\n    for (let i = 0; i < freqData.length; i++) {\r\n      str = str + `${freqData[i]}, ${dbData[i]}\\n`;\r\n    }\r\n\r\n    let textFile = null;\r\n    const makeTextFile = (text) => {\r\n      const data = new Blob([text], {\r\n        type: \"text/plain\",\r\n        endings: \"native\",\r\n      });\r\n\r\n      if (textFile !== null) {\r\n        window.URL.revokeObjectURL(textFile);\r\n      }\r\n\r\n      textFile = window.URL.createObjectURL(data);\r\n\r\n      return textFile;\r\n    };\r\n\r\n    const date = new Date(Date.now());\r\n    const dateTimeFormat = new Intl.DateTimeFormat(\"en\", {\r\n      hour: \"numeric\",\r\n      minute: \"2-digit\",\r\n      second: \"2-digit\",\r\n      month: \"short\",\r\n      day: \"2-digit\",\r\n    });\r\n    const [\r\n      { value: month },\r\n      ,\r\n      { value: day },\r\n      ,\r\n      { value: hour },\r\n      ,\r\n      { value: minute },\r\n      ,\r\n      { value: second },\r\n      ,\r\n      { value: dayPeriod },\r\n    ] = dateTimeFormat.formatToParts(date);\r\n\r\n    const link = document.getElementById(\"downloadLink\");\r\n    link.href = makeTextFile(str);\r\n    link.download = `Filters - ${month}/${day}, ${hour}:${minute}:${second} ${dayPeriod}`;\r\n    link.classList.remove(\"hidden\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Line\r\n        redraw={true}\r\n        data={{\r\n          labels: freqData,\r\n          datasets: [\r\n            {\r\n              data: dbData,\r\n              borderColor: \"white\",\r\n              pointBackgroundColor: \"rgba(71, 182, 255, 1)\",\r\n              pointBorderColor: \"rgba(0, 122, 204, 1)\",\r\n              fill: false,\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: false,\r\n          dragData: true,\r\n          dragX: false,\r\n          dragDataRound: 1,\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                ticks: {\r\n                  fontColor: \"white\",\r\n                },\r\n              },\r\n            ],\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  max: yMax,\r\n                  min: yMin,\r\n                  fontColor: \"white\",\r\n                },\r\n                gridLines: {\r\n                  zeroLineColor: \"white\",\r\n                  color: \"rgba(46, 46, 46, 1)\",\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        }}\r\n      />\r\n      <div className=\"flex flex-col items-center justify-center w-90p mx-auto mt-4\">\r\n        <button\r\n          className=\"text-white bg-blue-200 rounded shadow px-4 py-2\"\r\n          onClick={() => formatData()}\r\n        >\r\n          Generate File\r\n        </button>\r\n        <a\r\n          id=\"downloadLink\"\r\n          href=\"google.com\"\r\n          download\r\n          className=\"text-light-blue-200 my-4 hidden\"\r\n        >\r\n          Click here to download new filters\r\n        </a>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { Fragment, useState } from \"react\";\r\n\r\nimport Chart from \"./Chart\";\r\n\r\nconst FileInput = () => {\r\n  const [freqData, setFreqData] = useState([]);\r\n  const [dbData, setDbData] = useState([]);\r\n  const [yMax, setYMax] = useState(1);\r\n  const [yMin, setYMin] = useState(-1);\r\n\r\n  const handleFile = (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      let dataArr = event.target.result.split(\"\\n\");\r\n\r\n      let freqArr = [];\r\n      let dbArr = [];\r\n\r\n      dataArr.forEach((item) => {\r\n        const arr = item.split(\", \");\r\n\r\n        freqArr.push(parseFloat(arr[0].trim()));\r\n        dbArr.push(parseFloat(arr[1].trim()));\r\n      });\r\n\r\n      setFreqData(freqArr);\r\n      setDbData(dbArr);\r\n    };\r\n\r\n    reader.readAsText(file);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"w-90p flex flex-col items-center justify-center my-8\">\r\n        <input\r\n          type=\"file\"\r\n          className=\"text-white border-2 border-white rounded p-2 mb-4\"\r\n          onChange={(e) => handleFile(e)}\r\n        />\r\n        <div className=\"flex flex-row items-center justify-center mb-4\">\r\n          <div className=\"text-white mr-2\">Max Y: </div>\r\n          <input\r\n            className=\"w-10\"\r\n            type=\"number\"\r\n            onInput={(e) => setYMax(parseInt(e.target.value))}\r\n          />\r\n        </div>\r\n        <div className=\"flex flex-row items-center justify-center mb-4\">\r\n          <div className=\"text-white mr-2\">Max X: </div>\r\n          <input\r\n            type=\"number\"\r\n            className=\"w-10\"\r\n            onInput={(e) => setYMin(parseInt(e.target.value))}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <Chart freqData={freqData} dbData={dbData} yMax={yMax} yMin={yMin} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FileInput;\r\n","import React from \"react\";\n\nimport FileInput from \"./Components/FileInput\";\n\nimport \"./CSS/tailwind.css\";\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"flex flex-col w-90p max-w-screen-sm text-white mx-auto bg-dark-gray-800 p-4 mt-8 rounded shadow\">\n        <p className=\"mb-2\">\n          This is a web app that lets you manipulate the values of a Room EQ\n          Wizard calibration file in an easy to use UI. The calibarion file must\n          be a text file containing comma separeted Frequency, Decibel sets each\n          on a new line. Like this:{\" \"}\n        </p>\n        <p>50, -1</p>\n        <p>100, 1</p>\n        <p>1000, 0</p>\n        <p>120000, -3</p>\n        <p className=\"mb-2\">etc. . .</p>\n        <p>\n          Once the data is loaded you can drag each point on the graph up and\n          down to the desired dB value. When you are done just click on the\n          \"Generate File\" button at the bottom, the edited data will be put into\n          a file in the same format, then click the link that appears to\n          download the new file containing your edited data.\n        </p>\n      </div>\n      <FileInput />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}